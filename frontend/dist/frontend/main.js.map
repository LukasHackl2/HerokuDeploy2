{"version":3,"sources":["./src/app/pages/task-view/task-view.component.ts","./src/app/pages/task-view/task-view.component.html","./src/app/pages/login-page/login-page.component.ts","./src/app/pages/login-page/login-page.component.html","./src/app/pages/new-task/new-task.component.ts","./src/app/pages/new-task/new-task.component.html","./src/environments/environment.ts","./src/app/task.service.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/pages/new-room/new-room.component.ts","./src/app/pages/new-room/new-room.component.html","./src/app/app.module.ts","./src/app/auth.service.ts","./src/app/web-request.service.ts","./src/app/app-routing.module.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { TaskService } from '../../task.service';\nimport { ActivatedRoute, Params } from '@angular/router';\nimport { Task } from '../../models/task.model';\nimport { Room } from '../../models/room.model';\n\n@Component({\n  selector: 'app-task-view',\n  templateUrl: './task-view.component.html',\n  styleUrls: ['./task-view.component.scss']\n})\nexport class TaskViewComponent implements OnInit {\n\n  rooms: Room[];\n  tasks: Task[];\n\n  constructor(private taskService: TaskService, private route: ActivatedRoute) { }\n\n  ngOnInit(): void {\n    this.route.params.subscribe(\n      (params: Params) => {\n        if (params.roomId) {\n          this.taskService.getTasks(params.roomId).subscribe((tasks: any[]) => {\n            this.tasks = tasks;\n          })\n        } else {\n          this.tasks = undefined;\n        }\n      }\n    )\n\n    this.taskService.getRooms().subscribe((rooms: any[]) => {\n      this.rooms = rooms;\n    })\n  }\n\n  onTaskClick(task: Task) {\n    // set task completed\n    this.taskService.complete(task).subscribe(() => {\n      // the task has been set to completed successfully\n      console.log(\"completed successfully!\");\n      task.completed = !task.completed;\n    })\n  }\n \n}\n","<div class=\"centered-content\">\n    <div class=\"task-manager-container\">\n  \n      <div class=\"sidebar has-background-white\">\n        <h1 class=\"title has-text-primary\">\n          Roomlist\n        </h1>\n  \n        <div class=\"list-menu\">\n\n          <a class=\"list-menu-item\" *ngFor=\"let room of rooms\" [routerLink]=\"['/rooms', room._id]\" routerLinkActive=\"is-active\">\n              <p>{{ room.title }}</p>\n          </a>\n\n        </div>\n  \n        <button class=\"button is-primary has-text-white\" routerLink=\"/new-room\">+ New Room</button>\n  \n      </div>\n  \n      <div class=\"task-list-container has-background-light\">\n        <div *ngIf=\"tasks\">\n            <h1 class=\"title has-text-primary\">\n                Tasks\n            </h1>\n    \n            <!-- Task Elements -->\n            <div class=\"task\" *ngFor=\"let task of tasks\" (click)=\"onTaskClick(task)\" [ngClass]=\"{ 'completed': task.completed }\">\n              <p>{{ task.title }}</p>\n            </div>\n\n            <h3 class=\"empty-state-text\" *ngIf=\"tasks.length === 0\">There are no tasks for this room.</h3>\n    \n            <button class=\"circle-add-button button is-primary\" routerLink=\"./new-task\">\n              <img src=\"../../../assets/plus-icon.svg\" class=\"has-text-white\">\n            </button>\n        </div>\n\n        <div *ngIf=\"!tasks\">\n            <h3 class=\"empty-state-text\">Please select a room from the room list.</h3>\n        </div>\n\n      </div>\n\n    </div>\n\n</div>","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from '../../auth.service';\nimport { Router } from '@angular/router';\nimport { HttpResponse } from '@angular/common/http';\n\n@Component({\n  selector: 'app-login-page',\n  templateUrl: './login-page.component.html',\n  styleUrls: ['./login-page.component.scss']\n})\nexport class LoginPageComponent implements OnInit {\n\n  constructor(private authService: AuthService, private router: Router) { }\n\n  ngOnInit(): void {\n  }\n\n  onLoginButtonClicked(email: string, password: string) {\n    this.authService.login(email, password).subscribe((res: HttpResponse<any>) => {\n      if (res.status === 200) {\n        // we have logged in successfully\n        this.router.navigate(['/rooms']);\n      }\n      console.log(res);\n      \n    });\n  }\n\n}\n","<div class=\"centered-content\">\n    <div class=\"login-box\">\n  \n      <h1 class=\"title has-text-primary\">Login</h1>\n      \n      <div class=\"field\">\n        <p class=\"control has-icons-left has-icons-right\">\n          <input #emailInput class=\"input has-background-light\" type=\"email\" placeholder=\"Email\">\n          <span class=\"icon is-small is-left\">\n            <i class=\"fas fa-envelope\"></i>\n          </span>\n        </p>\n      </div>\n      <div class=\"field\">\n        <p class=\"control has-icons-left\">\n          <input #pwInput class=\"input has-background-light\" type=\"password\" placeholder=\"Password\">\n          <span class=\"icon is-small is-left\">\n            <i class=\"fas fa-lock\"></i>\n          </span>\n        </p>\n      </div>\n      <div class=\"field\" style=\"display: flex; justify-content: flex-end;\">\n        <p class=\"control\">\n          <button class=\"button is-success has-text-white\" (click)=\"onLoginButtonClicked(emailInput.value, pwInput.value)\">\n            Login\n          </button>\n        </p>\n      </div>\n  \n      <br>\n  \n    </div>\n  </div>","import { Component, OnInit } from '@angular/core';\nimport { TaskService } from '../../task.service';\nimport { ActivatedRoute, Params, Router } from '@angular/router';\nimport { Task } from '../../models/task.model';\n\n@Component({\n  selector: 'app-new-task',\n  templateUrl: './new-task.component.html',\n  styleUrls: ['./new-task.component.scss']\n})\nexport class NewTaskComponent implements OnInit {\n\n  constructor(private taskService: TaskService, private route: ActivatedRoute, private router: Router) { }\n\n  roomId: string;\n\n  ngOnInit(): void {\n    this.route.params.subscribe(\n      (params: Params) => {\n        this.roomId = params['roomId']; \n      })\n  }\n\n  createTask(title: string) {\n    this.taskService.createTask(title, this.roomId).subscribe((newTask: Task) => {\n      this.router.navigate(['../'], { relativeTo: this.route });\n    })\n  }\n}\n","<div class=\"centered-content\">\n        <div class=\"modal-box\">\n            <h1 class=\"title\">\n                Create a new task\n            </h1>\n    \n            <input #taskTitleInput class=\"input has-background-light is-medium\" type=\"text\" placeholder=\"Enter task name...\">\n            <br><br>\n            <div class=\"buttons is-right\">\n                <button class=\"button is-medium\" routerLink=\"\">Cancel</button>\n                <button class=\"button is-primary has-text-white is-medium\" (click)=\"createTask(taskTitleInput.value)\">Create</button>\n            </div>\n    \n        </div>\n</div>","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Injectable } from '@angular/core';\nimport { WebRequestService } from './web-request.service';\nimport { Task } from './models/task.model';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TaskService {\n\n  constructor(private webReqService: WebRequestService) { }\n\n  getRooms() {\n    return this.webReqService.get('rooms');\n  }\n\n  createRoom(title: string) {\n    // We want to send a web request to create a room\n    return this.webReqService.post('rooms', { title });\n  }\n\n  getTasks(roomId: string) {\n    return this.webReqService.get(`rooms/${roomId}/tasks`);\n  }\n\n  createTask(title: string, roomId: string) {\n    // We want to send a web request to create a task\n    return this.webReqService.post(`rooms/${roomId}/tasks`, { title });\n  }\n\n  complete(task: Task) {\n    return this.webReqService.patch(`rooms/${task._roomId}/tasks/${task._id}`, {\n      completed: !task.completed\n    });\n  }\n  \n}\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'frontend';\n}\n","<router-outlet></router-outlet>","import { Component, OnInit } from '@angular/core';\nimport { TaskService } from '../../task.service';\nimport { Router } from '@angular/router';\nimport { Room } from '../../models/room.model';\n\n@Component({\n  selector: 'app-new-room',\n  templateUrl: './new-room.component.html',\n  styleUrls: ['./new-room.component.scss']\n})\nexport class NewRoomComponent implements OnInit {\n\n  constructor(private taskService: TaskService, private router: Router) { }\n\n  ngOnInit(): void {\n  }\n\n  createRoom(title: string) {\n    this.taskService.createRoom(title).subscribe((room: Room ) => {\n      console.log(room); \n      // Navigate to /rooms/room._id\n      this.router.navigate([ '/rooms', room._id ]);\n    });\n  }\n\n}\n","<div class=\"centered-content\">\n    <div class=\"modal-box\">\n        <h1 class=\"title\">\n            Create a new room\n        </h1>\n\n        <input #roomTitleInput class=\"input has-background-light is-medium\" type=\"text\" placeholder=\"Enter room name...\">\n        <br><br>\n        <div class=\"buttons is-right\">\n            <button class=\"button is-medium\" routerLink=\"\">Cancel</button>\n            <button class=\"button is-primary has-text-white is-medium\" (click)=\"createRoom(roomTitleInput.value)\">Create</button>\n        </div>\n\n    </div>\n</div>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { TaskViewComponent } from './pages/task-view/task-view.component';\n\nimport { HttpClientModule } from '@angular/common/http';\nimport { NewRoomComponent } from './pages/new-room/new-room.component';\nimport { NewTaskComponent } from './pages/new-task/new-task.component';\nimport { LoginPageComponent } from './pages/login-page/login-page.component';\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    TaskViewComponent,\n    NewRoomComponent,\n    NewTaskComponent,\n    LoginPageComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    HttpClientModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpResponse } from '@angular/common/http';\nimport { WebRequestService } from './web-request.service';\nimport { Router } from '@angular/router';\nimport { shareReplay, tap } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n\n  constructor(private http: HttpClient, private webService: WebRequestService, private router: Router) { }\n\n  login(email: string, password: string) {\n    return this.webService.login(email, password).pipe(\n      shareReplay(),\n      tap((res: HttpResponse<any>) => {\n        // the auth tokens will be in the header of this response\n        this.setSession(res.body._id, res.headers.get('x-access-token'), res.headers.get('x-refresh-token'));\n        console.log(\"LOGGED IN!\");\n      })\n    )\n  }\n\n\n  signup(email: string, password: string) {\n    return this.webService.signup(email, password).pipe(\n      shareReplay(),\n      tap((res: HttpResponse<any>) => {\n        // the auth tokens will be in the header of this response\n        this.setSession(res.body._id, res.headers.get('x-access-token'), res.headers.get('x-refresh-token'));\n        console.log(\"Successfully signed up and now logged in!\");\n      })\n    )\n  }\n\n\n\n  logout() {\n    this.removeSession();\n\n    this.router.navigate(['/login']);\n  }\n\n  getAccessToken() {\n    return localStorage.getItem('x-access-token');\n  }\n\n  getRefreshToken() {\n    return localStorage.getItem('x-refresh-token');\n  }\n\n  getUserId() {\n    return localStorage.getItem('user-id');\n  }\n\n  setAccessToken(accessToken: string) {\n    localStorage.setItem('x-access-token', accessToken)\n  }\n  \n  private setSession(userId: string, accessToken: string, refreshToken: string) {\n    localStorage.setItem('user-id', userId);\n    localStorage.setItem('x-access-token', accessToken);\n    localStorage.setItem('x-refresh-token', refreshToken);\n  }\n\n  private removeSession() {\n    localStorage.removeItem('user-id');\n    localStorage.removeItem('x-access-token');\n    localStorage.removeItem('x-refresh-token');\n  }\n\n  getNewAccessToken() {\n    return this.http.get(`${this.webService.ROOT_URL}/users/me/access-token`, {\n      headers: {\n        'x-refresh-token': this.getRefreshToken(),\n        '_id': this.getUserId()\n      },\n      observe: 'response'\n    }).pipe(\n      tap((res: HttpResponse<any>) => {\n        this.setAccessToken(res.headers.get('x-access-token'));\n      })\n    )\n  }\n  \n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class WebRequestService {\n  readonly ROOT_URL;\n\n  constructor(private http: HttpClient) {\n    this.ROOT_URL = '';\n  }\n\n  get(uri: string) {\n    return this.http.get(`${this.ROOT_URL}/${uri}`);\n  }\n\n  post(uri: string, payload: Object) {\n    return this.http.post(`${this.ROOT_URL}/${uri}`, payload);\n  }\n\n  patch(uri: string, payload: Object) {\n    return this.http.patch(`${this.ROOT_URL}/${uri}`, payload);\n  }\n\n  delete(uri: string) {\n    return this.http.delete(`${this.ROOT_URL}/${uri}`);\n  }\n\n  login(email: string, password: string) {\n    return this.http.post(`${this.ROOT_URL}/users/login`, {\n      email,\n      password\n    }, { observe: 'response' });\n  }\n\n  signup(email: string, password: string) {\n    return this.http.post(`${this.ROOT_URL}/users/login`, {\n      email,\n      password\n    }, { observe: 'response' });\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { TaskViewComponent } from './pages/task-view/task-view.component';\nimport { NewRoomComponent } from './pages/new-room/new-room.component';\nimport { NewTaskComponent } from './pages/new-task/new-task.component';\nimport { LoginPageComponent } from './pages/login-page/login-page.component';\n\nconst routes: Routes = [\n  { path: '', redirectTo: 'rooms', pathMatch: 'full' },\n  { path: 'new-room', component: NewRoomComponent },\n  { path: 'login', component: LoginPageComponent },\n  { path: 'rooms', component: TaskViewComponent },\n  { path: 'rooms/:roomId', component: TaskViewComponent },\n  { path: 'rooms/:roomId/new-task', component: NewTaskComponent }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}